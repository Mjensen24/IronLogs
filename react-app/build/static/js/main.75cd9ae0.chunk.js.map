{"version":3,"sources":["services/auth.js","components/auth/LoginForm.js","components/auth/SignUpForm.js","components/auth/LogoutButton.js","components/NavBar/index.js","components/Footer/index.js","components/Homepage/index.js","components/auth/ProtectedRoute.js","components/UsersList.js","components/auth/ExerciseForm.js","components/auth/WorkoutForm.js","components/WorkoutDrawer/index.js","components/Workouts/index.js","components/User.js","components/NavLog/index.js","components/auth/DiaryForm.js","components/DiaryDrawer/index.js","components/Diary/index.js","components/auth/MealForm.js","components/auth/MealEntryForm.js","components/MealEntryDrawer/index.js","components/FoodTracker/index.js","App.js","index.js"],"names":["authenticate","a","fetch","headers","response","json","get_userId","login","email","password","method","body","JSON","stringify","logout","signUp","username","postWorkout","userId","title","date","postExercise","workoutId","reps","sets","weight","notes","postEntry","postMealEntry","postMeal","mealEntryId","calories","fat","carbs","water","LoginForm","authenticated","setAuthenticated","useState","errors","setErrors","setEmail","setPassword","onLogin","e","preventDefault","user","to","className","src","alt","onSubmit","map","error","htmlFor","name","type","placeholder","value","onChange","target","onClick","SignUpForm","setUsername","repeatPassword","setRepeatPassword","onSignUp","required","LogoutButton","onLogout","NavBar","exact","activeClassName","Footer","HomePage","ProtectedRoute","props","children","UsersList","users","setUsers","useEffect","responseData","fetchData","userComponents","key","id","ExerciseForm","setExercises","onClose","setTitle","setReps","setSets","setWeight","setNotes","onExercise","exercise","currentExercise","WorkoutForm","setWorkouts","setDate","userInfo","setUserInfo","onWorkout","workout","currentWorkouts","WorkoutDrawer","useDisclosure","isOpen","onOpen","btnRef","React","useRef","ref","colorScheme","placement","finalFocusRef","variant","mr","color","Workouts","workouts","exercises","allowToggle","_expanded","bg","flex","textAlign","pb","allowMultiple","User","setUser","useParams","NavLog","DiaryForm","setEntries","onEntry","entry","currentEntries","DiaryDrawer","Diary","entries","MealForm","setMeals","setCalories","setFat","setCarbs","setWater","onMeal","meal","currentMeals","MealEntryForm","setMealEntries","onMealEntry","mealEntry","MealEntryDrawer","FoodTracker","mealEntries","meals","App","loaded","setLoaded","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75cd9ae0.chunk.js","sourcesContent":["export const authenticate = async () => {\n  const response = await fetch('/api/auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  return await response.json();\n}\n\nexport const get_userId = async () => {\n  const response = await fetch('/api/auth/', {\n  });\n  return await response.json();\n}\n\nexport const login = async (email, password) => {\n  const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return await response.json();\n}\n\nexport const logout = async () => {\n  const response = await fetch(\"/api/auth/logout\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    }\n  });\n  return await response.json();\n};\n\n\nexport const signUp = async (username, email, password) => {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  return await response.json();\n}\n\nexport const postWorkout = async (userId, title, date) => {\n  const response = await fetch(\"/api/workouts/createworkout\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      userId,\n      title,\n      date,\n    }),\n  });\n  return await response.json();\n}\n\nexport const postExercise = async (userId, workoutId, title, reps, sets, weight, notes) => {\n  const response = await fetch(\"/api/workouts/createexercise\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      userId,\n      workoutId,\n      title,\n      reps,\n      sets,\n      weight,\n      notes,\n    }),\n  });\n  return await response.json();\n}\n\nexport const postEntry = async (userId, title, notes, date) => {\n  const response = await fetch(\"/api/diaryentries/createentry\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      userId,\n      title,\n      notes,\n      date,\n    }),\n  });\n  return await response.json();\n}\n\nexport const postMealEntry = async (userId, title, date) => {\n  const response = await fetch(\"/api/foodtracker/createfoodentry\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      userId,\n      title,\n      date,\n    }),\n  });\n  return await response.json();\n}\n\nexport const postMeal = async (userId, mealEntryId, title, calories, fat, carbs, water) => {\n  const response = await fetch(\"/api/foodtracker/createmeal\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      userId,\n      mealEntryId,\n      title,\n      calories,\n      fat,\n      carbs,\n      water,\n    }),\n  });\n  return await response.json();\n}\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { login } from \"../../services/auth\";\n\nconst LoginForm = ({ authenticated, setAuthenticated }) => {\n  const [errors, setErrors] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onLogin = async (e) => {\n    e.preventDefault();\n    const user = await login(email, password);\n    if (!user.errors) {\n      setAuthenticated(true);\n    } else {\n      setErrors(user.errors);\n    }\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  if (authenticated) {\n    return <Redirect to=\"/\" />;\n    // need userid to redirect to workouts/userid (userid in navlink =undefined error)\n  }\n\n  const demoLogin = () => {\n    setEmail(\"demo@aa.io\")\n    setPassword(\"password\")\n  }\n\n  return (\n    <div className=\"login-container\">\n      <img src=\"/images/plant.jpg\" alt=\"plant\"></img>\n      <div className=\"form-container\">\n        <div className=\"form-info\">\n          <div className=\"form-inner\">\n            <form onSubmit={onLogin}>\n              <img className=\"form-img\" src=\"/images/barbell.png\" alt=\"IronLogs\"></img>\n              <div>\n                {errors.map((error) => (\n                  <div>{error}</div>\n                ))}\n              </div>\n              <div>\n                <label htmlFor=\"email\"></label>\n                <input\n                  className=\"login-input\"\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={updateEmail}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\"></label>\n                <input\n                  className=\"login-input\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={updatePassword}\n                />\n              </div>\n              <div className=\"form-buttons\">\n                <button type=\"submit\">Login</button>\n                <button onClick={demoLogin} type=\"submit\">Demo</button>\n              </div>\n            </form>\n          </div>\n          <div className=\"form-footer\">\n            <p>Dont have an account? Sign up</p>\n          </div>\n        </div>\n        {/* <div className=\"form-photo\">\n          <img src=\"/images/loginlogo.png\" alt=\"IronLogs\"></img>\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../services/auth';\n\nconst SignUpForm = ({authenticated, setAuthenticated}) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n\n  const onSignUp = async (e) => {\n    e.preventDefault();\n    if (password === repeatPassword) {\n      const user = await signUp(username, email, password);\n      if (!user.errors) {\n        setAuthenticated(true);\n      }\n    }\n  };\n\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const updateRepeatPassword = (e) => {\n    setRepeatPassword(e.target.value);\n  };\n\n  if (authenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <form onSubmit={onSignUp}>\n      <div>\n        <label>User Name</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          onChange={updateUsername}\n          value={username}\n        ></input>\n      </div>\n      <div>\n        <label>Email</label>\n        <input\n          type=\"text\"\n          name=\"email\"\n          onChange={updateEmail}\n          value={email}\n        ></input>\n      </div>\n      <div>\n        <label>Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          onChange={updatePassword}\n          value={password}\n        ></input>\n      </div>\n      <div>\n        <label>Repeat Password</label>\n        <input\n          type=\"password\"\n          name=\"repeat_password\"\n          onChange={updateRepeatPassword}\n          value={repeatPassword}\n          required={true}\n        ></input>\n      </div>\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  );\n};\n\nexport default SignUpForm;\n","import React from \"react\";\nimport { logout } from \"../../services/auth\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LogoutButton = ({ authenticated, setAuthenticated }) => {\n  const onLogout = async (e) => {\n    await logout();\n    setAuthenticated(false);\n  };\n\n  if (!authenticated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return <button onClick={onLogout}>Logout</button>;\n};\n\nexport default LogoutButton;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport LogoutButton from '../auth/LogoutButton';\nimport \"./index.css\"\n\nconst NavBar = ({ userId, setAuthenticated, authenticated }) => {\n  return (\n    <div className=\"navbar-container\">\n      <div className=\"navbar-content\">\n        <img src=\"/images/Ironlogss.png\" alt=\"IronLogs Logo\"></img>\n        <nav>\n          <ul>\n            <li className=\"navbar-element\">\n              <NavLink to=\"/\" exact={true} activeClassName=\"active\">\n                Home\n              </NavLink>\n            </li>\n            {!userId && (\n              <>\n                <li className=\"navbar-element\">\n                  <NavLink to=\"/login\" exact={true} activeClassName=\"active\">\n                    Login\n                  </NavLink>\n                </li>\n                <li className=\"navbar-element\">\n                  <NavLink to=\"/sign-up\" exact={true} activeClassName=\"active\">\n                    Sign Up\n                  </NavLink>\n                </li>\n              </>\n            )}\n            <li className=\"navbar-element\">\n              <NavLink to=\"/users\" exact={true} activeClassName=\"active\">\n                Users\n              </NavLink>\n            </li>\n            <li className=\"navbar-element\">\n              <LogoutButton authenticated={authenticated} setAuthenticated={setAuthenticated} />\n            </li>\n          </ul>\n        </nav>\n\n      </div>\n    </div >\n  );\n}\n\nexport default NavBar;\n","import React from 'react'\nimport './index.css'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-container\">\n            <div className=\"top\">\n\n            </div>\n            <div className=\"bottom\">\n                <h1>Bottom</h1>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\n// import { Route, Switch } from 'react-router-dom';\n// import Diary from '../Diary';\n// import FoodTracker from '../FoodTracker';\n// import Workouts from '../Workouts';\n\nconst HomePage = () => {\n    return (\n        <div className=\"mainpage-container\">\n            <h1>homepage</h1>\n        </div>\n    )\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = props => {\n  return (\n    <Route {...props}>\n      {(props.authenticated)? props.children  : <Redirect to=\"/login\" />}\n    </Route>\n  )\n};\n\n\nexport default ProtectedRoute;\n","import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction UsersList() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n    fetchData();\n  }, []);\n\n  const userComponents = users.map((user) => {\n    return (\n      <li key={user.id}>\n        <NavLink to={`/users/${user.id}`}>{user.username}</NavLink>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <h1>User List: </h1>\n      <ul>{userComponents}</ul>\n    </>\n  );\n}\n\nexport default UsersList;\n","import React, { useState } from \"react\";\nimport { postExercise } from \"../../services/auth\";\n\nconst ExerciseForm = ({ userId, workoutId, setExercises, onClose }) => {\n    const [title, setTitle] = useState(\"\");\n    const [reps, setReps] = useState(\"\");\n    const [sets, setSets] = useState(\"\");\n    const [weight, setWeight] = useState(\"\");\n    const [notes, setNotes] = useState(\"\");\n\n\n    const onExercise = async (e) => {\n        e.preventDefault();\n        const exercise = await postExercise(userId, workoutId, title, reps, sets, weight, notes)\n        setExercises((currentExercise) => {\n            return (\n                [...currentExercise, exercise]\n            )\n        })\n        onClose()\n    }\n\n    const updateTitle = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const updateReps = (e) => {\n        setReps(e.target.value);\n    };\n\n    const updateSets = (e) => {\n        setSets(e.target.value);\n    };\n\n    const updateWeight = (e) => {\n        setWeight(e.target.value);\n    };\n\n    const updateNotes = (e) => {\n        setNotes(e.target.value);\n    };\n\n    return (\n        <div className=\"exercise-form_container\">\n            <form className=\"exercise-form\" onSubmit={onExercise}>\n                <div className=\"form-title\">\n                    <label htmlFor=\"title\"></label>\n                    <input\n                        name=\"title\"\n                        type=\"text\"\n                        placeholder=\"Title\"\n                        value={title}\n                        onChange={updateTitle}\n                    />\n                </div>\n                <div className=\"form-nums\">\n                    <label htmlFor=\"reps\"></label>\n                    <input\n                        name=\"reps\"\n                        type=\"number\"\n                        placeholder=\"reps\"\n                        value={reps}\n                        onChange={updateReps}\n                    />\n                    <label htmlFor=\"sets\"></label>\n                    <input\n                        name=\"sets\"\n                        type=\"number\"\n                        placeholder=\"sets\"\n                        value={sets}\n                        onChange={updateSets}\n                    />\n                    <label htmlFor=\"weight\"></label>\n                    <input\n                        name=\"weight\"\n                        type=\"number\"\n                        placeholder=\"weight\"\n                        value={weight}\n                        onChange={updateWeight}\n                    />\n                </div>\n                <div className=\"form-notes\">\n                    <label htmlFor=\"notes\"></label>\n                    <input\n                        name=\"notes\"\n                        type=\"textbox\"\n                        placeholder=\"notes\"\n                        value={notes}\n                        onChange={updateNotes}\n                    />\n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default ExerciseForm;\n\n\n// code to empty the form values after a submission\n// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n// import { useState } from \"react\";\n// const useInputState = (initialVal) => {\n//     const [value, setValue] = useState(initialVal);\n//     const handleChange = (e) => {\n//         setValue(e.target.value);\n//     };\n//     const reset = () => {\n//         setValue(\"\");\n//     };\n//     return [value, handleChange, reset];\n// };\n// export default useInputState;\n","import React, { useEffect, useState } from \"react\";\nimport { get_userId, postWorkout } from \"../../services/auth\";\n\nconst WorkoutForm = ({ userId, setWorkouts, onClose }) => {\n    const [title, setTitle] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [userInfo, setUserInfo] = useState([])\n\n\n    useEffect(() => {\n        (async () => {\n            const user = await get_userId();\n            setUserInfo(user)\n        })();\n    }, []);\n\n\n    const onWorkout = async (e) => {\n        e.preventDefault();\n        const workout = await postWorkout(userInfo.id, title, date)\n        setWorkouts((currentWorkouts) => {\n            return (\n                [...currentWorkouts, workout]\n            )\n        })\n        onClose()\n    }\n\n    const updateTitle = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const updateDate = (e) => {\n        setDate(e.target.value);\n    };\n\n    return (\n        <form onSubmit={onWorkout}>\n            <div>\n                <label htmlFor=\"title\">Title</label>\n                <input\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={title}\n                    onChange={updateTitle}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"date\">Date</label>\n                <input\n                    name=\"date\"\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    value={date}\n                    onChange={updateDate}\n                />\n            </div>\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default WorkoutForm;\n","import React from 'react'\n\nimport { useDisclosure, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from \"@chakra-ui/react\"\nimport WorkoutForm from '../auth/WorkoutForm'\n\nfunction WorkoutDrawer({ setWorkouts, userId }) {\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const btnRef = React.useRef()\n\n\n    return (\n        <>\n            <Button className=\"creation-button\" ref={btnRef} colorScheme=\"teal\" onClick={onOpen}>\n                +\n            </Button>\n            <Drawer\n                isOpen={isOpen}\n                placement=\"right\"\n                onClose={onClose}\n                finalFocusRef={btnRef}\n            >\n                <DrawerOverlay>\n                    <DrawerContent>\n                        <DrawerCloseButton />\n                        <DrawerHeader>Create your Workout</DrawerHeader>\n\n                        <DrawerBody>\n                            <WorkoutForm onClose={onClose} setWorkouts={setWorkouts} userId={userId} />\n\n                        </DrawerBody>\n\n                        <DrawerFooter>\n                            <Button variant=\"outline\" mr={3} onClick={onClose}>\n                                Cancel\n                            </Button>\n                            <Button color=\"blue\">Save</Button>\n                        </DrawerFooter>\n                    </DrawerContent>\n                </DrawerOverlay>\n            </Drawer>\n        </>\n    )\n}\n\nexport default WorkoutDrawer;\n","import React, { useEffect, useState } from \"react\";\nimport { useDisclosure, Accordion, AccordionItem, AccordionButton, AccordionPanel, Box, AccordionIcon } from \"@chakra-ui/react\"\nimport \"./index.css\"\nimport ExerciseForm from \"../auth/ExerciseForm\";\nimport WorkoutDrawer from \"../WorkoutDrawer\";\n\n\nconst Workouts = ({ userId }) => {\n    const [workouts, setWorkouts] = useState([]);\n    const [exercises, setExercises] = useState([]);\n\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(`/api/workouts/${userId}`);\n            const responseData = await response.json();\n            setWorkouts(responseData.workouts);\n        }\n        fetchData();\n    }, [userId]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(`/api/workouts/exercises/${userId}`);\n            const responseData = await response.json();\n            setExercises(responseData.exercises);\n        }\n        fetchData();\n    }, [userId]);\n\n    const { onClose } = useDisclosure()\n\n    return (\n        <>\n            <div className=\"mainpage-container\">\n                <h1>Workouts</h1>\n                <div className=\"workouts_container\">\n                    {workouts.map((workout) => {\n                        return (\n                            <div key={workout.id}>\n                                <Accordion allowToggle>\n                                    <AccordionItem className=\"individual-workout_container\">\n                                        <AccordionButton _expanded={{ bg: \"teal\", color: \"white\" }} className=\"individual-workout_header\">\n                                            <Box flex=\"1\" textAlign=\"left\">\n                                                <p>{workout.date}</p>\n                                                <p>{workout.title}</p>\n                                            </Box>\n                                            <AccordionIcon />\n                                        </AccordionButton>\n                                        <AccordionPanel className=\"individual-workout_data\" pb={4}>\n                                            {exercises.map((exercise) => {\n                                                if (exercise.workoutId === workout.id) {\n                                                    return (\n                                                        <div key={exercise.id} className=\"excercise-container\">\n                                                            <div className=\"exercise-data\">\n                                                                <p>Exercise: {exercise.title}</p>\n                                                                <p>Weight: {exercise.weight}</p>\n                                                                <p>Reps: {exercise.reps}</p>\n                                                                <p>Sets: {exercise.sets}</p>\n                                                            </div>\n                                                            <p>Notes: {exercise.notes}</p>\n                                                        </div>\n                                                    )\n                                                }\n                                                return (\n                                                    null\n                                                )\n                                            })}\n                                            <Accordion allowMultiple>\n                                                <AccordionItem>\n                                                    <AccordionButton _expanded={{ bg: \"teal\", color: \"white\" }}>\n                                                        <Box flex=\"1\" textAlign=\"left\">\n                                                            Add Exercise\n                                                        </Box>\n                                                        <AccordionIcon />\n                                                    </AccordionButton>\n                                                    <AccordionPanel pb={4}>\n                                                        <ExerciseForm onClose={onClose} setExercises={setExercises} workoutId={workout.id} userId={userId} />\n                                                    </AccordionPanel>\n                                                </AccordionItem>\n                                            </Accordion>\n                                        </AccordionPanel>\n                                    </AccordionItem>\n                                </Accordion>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div >\n            <div className=\"post-button\">\n                <WorkoutDrawer setWorkouts={setWorkouts} userId={userId} />\n            </div>\n        </>\n    )\n}\n\nexport default Workouts;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction User() {\n  const [user, setUser] = useState({});\n  // Notice we use useParams here instead of getting the params\n  // From props.\n  const { userId } = useParams();\n\n  useEffect(() => {\n    if (!userId) {\n      return\n    }\n    (async () => {\n      const response = await fetch(`/api/users/${userId}`);\n      const user = await response.json();\n      setUser(user);\n    })();\n  }, [userId]);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <ul>\n      <li>\n        <strong>User Id</strong> {userId}\n      </li>\n      <li>\n        <strong>Username</strong> {user.username}\n      </li>\n      <li>\n        <strong>Email</strong> {user.email}\n      </li>\n    </ul>\n  );\n}\nexport default User;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport \"./index.css\"\n\nconst NavLog = ({ userId }) => {\n\n    return (\n        <div className=\"navlog-container\">\n            <nav className=\"navlog-main\">\n                <ul className=\"navlog-ul\">\n                    <div>\n                        <li className=\"navlog-li\">\n                            <NavLink to={`/workouts/${userId}`} exact={true} activeClassName=\"navlog-active\">\n                                Workouts\n                            </NavLink>\n                        </li>\n                    </div>\n                    <div>\n                        <li className=\"navlog-li\">\n                            <NavLink to={`/diary/${userId}`} exact={true} activeClassName=\"navlog-active\">\n                                Diary\n                            </NavLink>\n                        </li>\n                    </div>\n                    <div>\n                        <li className=\"navlog-li\">\n                            <NavLink to={`/foodtracker/${userId}`} exact={true} activeClassName=\"navlog-active\">\n                                Food Tracker\n                            </NavLink>\n                        </li>\n                    </div>\n                    <div>\n                        <li className=\"navlog-li\">\n                            <NavLink to=\"/\" exact={true} activeClassName=\"navlog-active\">\n                                Home\n                            </NavLink>\n                        </li>\n                    </div>\n                </ul>\n            </nav>\n        </div>\n    )\n}\n\nexport default NavLog\n","import React, { useState } from \"react\";\nimport { postEntry } from \"../../services/auth\";\n\nconst DiaryForm = ({ userId, setEntries, onClose }) => {\n    const [title, setTitle] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [notes, setNotes] = useState(\"\");\n\n\n    const onEntry = async (e) => {\n        e.preventDefault();\n        const entry = await postEntry(userId, title, notes, date)\n        setEntries((currentEntries) => {\n            return (\n                [...currentEntries, entry]\n            )\n        })\n        onClose()\n    }\n\n    const updateTitle = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const updateDate = (e) => {\n        setDate(e.target.value);\n    };\n\n    const updateNotes = (e) => {\n        setNotes(e.target.value);\n    };\n\n    return (\n        <form onSubmit={onEntry}>\n            <div>\n                <label htmlFor=\"title\">Title</label>\n                <input\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={title}\n                    onChange={updateTitle}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"date\">Date</label>\n                <input\n                    name=\"date\"\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    value={date}\n                    onChange={updateDate}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"notes\">notes</label>\n                <input\n                    name=\"notes\"\n                    type=\"text\"\n                    placeholder=\"notes\"\n                    value={notes}\n                    onChange={updateNotes}\n                />\n            </div>\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default DiaryForm;\n","import React from 'react'\n\nimport { useDisclosure, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from \"@chakra-ui/react\"\nimport DiaryForm from '../auth/DiaryForm'\n\nfunction DiaryDrawer({ setEntries, userId }) {\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const btnRef = React.useRef()\n\n\n    return (\n        <>\n            <Button className=\"creation-button\" ref={btnRef} colorScheme=\"teal\" onClick={onOpen}>\n                +\n            </Button>\n            <Drawer\n                isOpen={isOpen}\n                placement=\"right\"\n                onClose={onClose}\n                finalFocusRef={btnRef}\n            >\n                <DrawerOverlay>\n                    <DrawerContent>\n                        <DrawerCloseButton />\n                        <DrawerHeader>Create your Daiary Entry</DrawerHeader>\n\n                        <DrawerBody>\n                            <DiaryForm onClose={onClose} setEntries={setEntries} userId={userId} />\n\n                        </DrawerBody>\n\n                        <DrawerFooter>\n                            <Button variant=\"outline\" mr={3} onClick={onClose}>\n                                Cancel\n                            </Button>\n                            <Button color=\"blue\">Save</Button>\n                        </DrawerFooter>\n                    </DrawerContent>\n                </DrawerOverlay>\n            </Drawer>\n        </>\n    )\n}\n\nexport default DiaryDrawer;\n","import React, { useEffect, useState } from 'react'\nimport { Accordion, AccordionItem, AccordionButton, AccordionPanel, Box, AccordionIcon } from \"@chakra-ui/react\"\nimport \"./index.css\"\nimport DiaryDrawer from '../DiaryDrawer';\n\nconst Diary = ({ userId }) => {\n    const [entries, setEntries] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(`/api/diaryentries/${userId}`);\n            const responseData = await response.json();\n            setEntries(responseData.entries);\n        }\n        fetchData();\n    }, [userId]);\n\n    return (\n        <>\n            <div className=\"mainpage-container\">\n                <h1>Diary</h1>\n                <div className=\"entries_container\">\n                    {entries.map((entry) => {\n                        return (\n                            <div key={entry.id}>\n                                <Accordion allowToggle>\n                                    <AccordionItem className=\"entry\">\n                                        <h2>\n                                            <AccordionButton className=\"entries_header\" _expanded={{ bg: \"teal\", color: \"white\" }}>\n                                                <Box flex=\"1\" textAlign=\"left\">\n                                                    <p>{entry.date}</p>\n                                                    <p>{entry.title}</p>\n                                                </Box>\n                                                <AccordionIcon />\n                                            </AccordionButton>\n                                        </h2>\n                                        <AccordionPanel className=\"entry-data\" pb={4}>\n                                            <p>{entry.notes}</p>\n                                        </AccordionPanel>\n                                    </AccordionItem>\n                                </Accordion>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"post-button\">\n                <DiaryDrawer setEntries={setEntries} userId={userId} />\n            </div>\n        </>\n    )\n}\n\nexport default Diary\n","import React, { useState } from \"react\";\nimport { postMeal } from \"../../services/auth\";\n\nconst MealForm = ({ userId, mealEntryId, setMeals }) => {\n    const [title, setTitle] = useState(\"\");\n    const [calories, setCalories] = useState(\"\");\n    const [fat, setFat] = useState(\"\");\n    const [carbs, setCarbs] = useState(\"\");\n    const [water, setWater] = useState(\"\");\n\n    const onMeal = async (e) => {\n        e.preventDefault();\n        const meal = await postMeal(userId, mealEntryId, title, calories, fat, carbs, water)\n        setMeals((currentMeals) => {\n            return (\n                [...currentMeals, meal]\n            )\n        })\n    }\n\n    const updateTitle = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const updateCalories = (e) => {\n        setCalories(e.target.value);\n    };\n\n    const updateFat = (e) => {\n        setFat(e.target.value);\n    };\n\n    const updateCarbs = (e) => {\n        setCarbs(e.target.value);\n    };\n\n    const updateWater = (e) => {\n        setWater(e.target.value);\n    };\n\n    return (\n        <form onSubmit={onMeal}>\n            <div>\n                <label htmlFor=\"title\">Title</label>\n                <input\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={title}\n                    onChange={updateTitle}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"reps\">calories</label>\n                <input\n                    name=\"calories\"\n                    type=\"number\"\n                    placeholder=\"calories\"\n                    value={calories}\n                    onChange={updateCalories}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"fat\">fat</label>\n                <input\n                    name=\"fat\"\n                    type=\"number\"\n                    placeholder=\"fat\"\n                    value={fat}\n                    onChange={updateFat}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"carbs\">carbs</label>\n                <input\n                    name=\"carbs\"\n                    type=\"number\"\n                    placeholder=\"carbs\"\n                    value={carbs}\n                    onChange={updateCarbs}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"water\">water</label>\n                <input\n                    name=\"water\"\n                    type=\"text\"\n                    placeholder=\"water\"\n                    value={water}\n                    onChange={updateWater}\n                />\n            </div>\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default MealForm;\n","import React, { useState } from \"react\";\nimport { postMealEntry } from \"../../services/auth\";\n\nconst MealEntryForm = ({ userId, setMealEntries, onClose }) => {\n    const [title, setTitle] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n\n    const onMealEntry = async (e) => {\n        e.preventDefault();\n        const mealEntry = await postMealEntry(userId.id, title, date)\n        setMealEntries((currentEntries) => {\n            return (\n                [...currentEntries, mealEntry]\n            )\n        })\n        onClose()\n    }\n\n    const updateTitle = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const updateDate = (e) => {\n        setDate(e.target.value);\n    };\n\n    return (\n        <form onSubmit={onMealEntry}>\n            <div>\n                <label htmlFor=\"title\">Title</label>\n                <input\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={title}\n                    onChange={updateTitle}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"date\">Date</label>\n                <input\n                    name=\"date\"\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    value={date}\n                    onChange={updateDate}\n                />\n            </div>\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default MealEntryForm;\n","import React from 'react'\n\nimport { useDisclosure, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from \"@chakra-ui/react\"\nimport MealEntryForm from \"../auth/MealEntryForm\"\n\nfunction MealEntryDrawer({ setMealEntries, userId }) {\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const btnRef = React.useRef()\n\n\n    return (\n        <>\n            <Button className=\"creation-button\" ref={btnRef} colorScheme=\"teal\" onClick={onOpen}>\n                +\n            </Button>\n            <Drawer\n                isOpen={isOpen}\n                placement=\"right\"\n                onClose={onClose}\n                finalFocusRef={btnRef}\n            >\n                <DrawerOverlay>\n                    <DrawerContent>\n                        <DrawerCloseButton />\n                        <DrawerHeader>Create your Meal Entry</DrawerHeader>\n\n                        <DrawerBody>\n                            <MealEntryForm onClose={onClose} setMealEntries={setMealEntries} userId={userId} />\n\n                        </DrawerBody>\n\n                        <DrawerFooter>\n                            <Button variant=\"outline\" mr={3} onClick={onClose}>\n                                Cancel\n                            </Button>\n                            <Button color=\"blue\">Save</Button>\n                        </DrawerFooter>\n                    </DrawerContent>\n                </DrawerOverlay>\n            </Drawer>\n        </>\n    )\n}\n\nexport default MealEntryDrawer;\n","import React, { useEffect, useState } from 'react'\nimport { Accordion, AccordionItem, AccordionButton, AccordionPanel, Box, AccordionIcon } from \"@chakra-ui/react\"\nimport \"./index.css\"\nimport MealForm from '../auth/MealForm'\nimport MealEntryDrawer from '../MealEntryDrawer'\n\nconst FoodTracker = ({ userId }) => {\n    const [mealEntries, setMealEntries] = useState([]);\n    const [meals, setMeals] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(`/api/foodtracker/${userId}`);\n            const responseData = await response.json();\n            setMealEntries(responseData.entries);\n        }\n        fetchData();\n    }, [userId]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(`/api/foodtracker/meals/${userId}`);\n            const responseData = await response.json();\n            setMeals(responseData.meals);\n        }\n        fetchData();\n    }, [userId]);\n\n\n    return (\n        <>\n            <div className=\"mainpage-container\">\n                <h1>Food Tracker</h1>\n                <div className=\"meals_container\">\n                    {mealEntries.map((entry) => {\n                        return (\n                            <div key={entry.id}>\n                                <Accordion allowMultiple>\n                                    <AccordionItem className=\"entry_container\">\n                                        <h2>\n                                            <AccordionButton _expanded={{ bg: \"teal\", color: \"white\" }}>\n                                                <Box flex=\"1\" textAlign=\"left\">\n                                                    <p>{entry.date}</p>\n                                                    <p>{entry.title}</p>\n                                                </Box>\n                                                <AccordionIcon />\n                                            </AccordionButton>\n                                        </h2>\n                                        <AccordionPanel pb={4}>\n                                            {meals.map((meal) => {\n                                                if (meal.mealEntryId === entry.id) {\n                                                    return (\n                                                        <div key={meal.id} className=\"meal-container\">\n                                                            <div className=\"meal-data\">\n                                                                <p className=\"meal-data_entry\">{meal.title}</p>\n                                                                <p className=\"meal-data_entry\">Calories: {meal.calories}</p>\n                                                                <p className=\"meal-data_entry\">Fat: {meal.fat}</p>\n                                                                <p className=\"meal-data_entry\">Carbs: {meal.carbs}</p>\n                                                                <p className=\"meal-data_entry\">Water: {meal.water} oz.</p>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                }\n                                                return null;\n                                            })}\n                                            <Accordion allowMultiple>\n                                                <AccordionItem>\n                                                    <h2>\n                                                        <AccordionButton _expanded={{ bg: \"teal\", color: \"white\" }}>\n                                                            <Box flex=\"1\" textAlign=\"left\">\n                                                                Add Meal\n                                                            </Box>\n                                                            <AccordionIcon />\n                                                        </AccordionButton>\n                                                    </h2>\n                                                    <AccordionPanel pb={4}>\n                                                        <MealForm setMeals={setMeals} userId={userId} mealEntryId={entry.id} />\n                                                    </AccordionPanel>\n                                                </AccordionItem>\n                                            </Accordion>\n                                        </AccordionPanel>\n                                    </AccordionItem>\n                                </Accordion>\n\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"post-button\">\n                <MealEntryDrawer setMealEntries={setMealEntries} userId={userId} />\n            </div>\n        </>\n    )\n}\n\nexport default FoodTracker\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport LoginForm from \"./components/auth/LoginForm\";\nimport SignUpForm from \"./components/auth/SignUpForm\";\nimport NavBar from \"./components/NavBar/index\";\nimport Footer from \"./components/Footer/index\";\nimport HomePage from \"./components/Homepage/index\"\nimport ProtectedRoute from \"./components/auth/ProtectedRoute\";\nimport UsersList from \"./components/UsersList\";\nimport Workouts from './components/Workouts/index'\nimport User from \"./components/User\";\nimport { authenticate } from \"./services/auth\";\nimport NavLog from \"./components/NavLog\";\nimport Diary from \"./components/Diary\";\nimport FoodTracker from \"./components/FoodTracker\";\n\nfunction App() {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [userInfo, setUserInfo] = useState([])\n  const userId = userInfo.id\n\n  useEffect(() => {\n    (async () => {\n      const user = await authenticate();\n      if (!user.errors) {\n        setUserInfo(user)\n        setAuthenticated(true);\n      }\n      setLoaded(true);\n    })();\n  }, [authenticated]);\n\n  if (!loaded) {\n    return null;\n  }\n\n\n\n  return (\n    <BrowserRouter>\n      <NavBar authenticated={authenticated} userId={userId} setAuthenticated={setAuthenticated} />\n      <Switch>\n        <Route path={`/workouts/:${userId}`} exact={true} authenticated={authenticated}>\n          <div className=\"homepage-layout\">\n            <NavLog userId={userId} />\n            <Workouts userId={userId} />\n          </div>\n        </Route>\n        <Route path={`/diary/:${userId}`}>\n          <div className=\"homepage-layout\">\n            <NavLog userId={userId} />\n            <Diary userId={userId} />\n          </div>\n        </Route>\n        <Route path={`/foodtracker/:${userId}`}>\n          <div className=\"homepage-layout\">\n            <NavLog userId={userId} />\n            <FoodTracker userId={userId} />\n          </div>\n        </Route>\n        <Route path=\"/login\" exact={true}>\n          <LoginForm\n            authenticated={authenticated}\n            setAuthenticated={setAuthenticated}\n          />\n        </Route>\n        <Route path=\"/sign-up\" exact={true}>\n          <SignUpForm authenticated={authenticated} setAuthenticated={setAuthenticated} />\n        </Route>\n        <ProtectedRoute path=\"/users\" exact={true} authenticated={authenticated}>\n          <UsersList />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/users/:userId\" exact={true} authenticated={authenticated}>\n          <User />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/\" exact={true} authenticated={authenticated}>\n          <NavLog />\n          <HomePage />\n        </ProtectedRoute>\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}